<?xml version="1.0" encoding="UTF-8"?>
<schema name="Episciences" version="1.6">
	<types>
		<!-- field type definitions. The "name" attribute is just a label to be used by field definitions. The "class" attribute and any other attributes determine the real behavior of the fieldType. Class names
			starting with "solr" refer to java classes in a standard package such as org.apache.solr.analysis -->

		<!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
		<fieldType name="string" class="solr.StrField" sortMissingLast="true"/>

		<!-- boolean type: "true" or "false" -->
		<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>

		<!-- sortMissingLast and sortMissingFirst attributes are optional attributes are currently supported on types that are sorted internally as strings and on numeric types. This includes "string","boolean",
			and, as of 3.5 (and 4.x), int, float, long, date, double, including the "Trie" variants. - If sortMissingLast="true", then a sort on this field will cause documents without the field to come after documents
			with the field, regardless of the requested sort order (asc or desc). - If sortMissingFirst="true", then a sort on this field will cause documents without the field to come before documents with the field,
			regardless of the requested sort order. - If sortMissingLast="false" and sortMissingFirst="false" (the default), then default lucene sorting will be used which places docs without the field first in an
			ascending sort and last in a descending sort. -->

		<!-- Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types. -->
		<fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

		<!-- Numeric field types that index each value at various levels of precision to accelerate range queries when the number of values between the range endpoints is large. See the javadoc for NumericRangeQuery
			for internal implementation details. Smaller precisionStep values (specified in bits) will lead to more tokens indexed per value, slightly larger index size, and faster range queries. A precisionStep of
			0 disables indexing at different precision levels. -->
		<fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
		<fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
		<fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
		<fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>

		<!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and is a more restricted form of the canonical representation of dateTime http://www.w3.org/TR/xmlschema-2/#dateTime The trailing
			"Z" designates UTC time and is mandatory. Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z All other components are mandatory. Expressions can also be used to denote calculations that
			should be performed relative to "NOW" to determine the value, ie... NOW/HOUR ... Round to the start of the current hour NOW-1DAY ... Exactly 1 day prior to now NOW/DAY+6MONTHS+3DAYS ... 6 months and 3
			days in the future from the start of the current day Consult the DateField javadocs for more information. Note: For faster range queries, consider the tdate type -->
		<fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

		<!-- A Trie based date field for faster date range queries and date faceting. -->
		<fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>

		<!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
		<fieldtype name="binary" class="solr.BinaryField"/>

		<!-- Note: These should only be used for compatibility with existing indexes (created with lucene or older Solr versions). Use Trie based fields instead. As of Solr 3.5 and 4.x, Trie based fields support
			sortMissingFirst/Last Plain numeric field types that store and index the text value verbatim (and hence don't correctly support range queries, since the lexicographic ordering isn't equal to the numeric
			ordering) -->

		<!-- The "RandomSortField" is not used to store or search any data. You can declare fields of this type it in your schema to generate pseudo-random orderings of your docs for sorting or function purposes.
			The ordering is generated based on the field name and the version of the index. As long as the index version remains unchanged, and the same field name is reused, the ordering of the docs will be consistent.
			If you want different psuedo-random orderings of documents, for the same version of the index, use a dynamicField and change the field name in the request. -->
		<fieldType name="random" class="solr.RandomSortField" indexed="true"/>

		<!-- solr.TextField allows the specification of custom text analyzers specified as a tokenizer and a list of token filters. Different analyzers may be specified for indexing and querying. The optional
			positionIncrementGap puts space between multiple fields of this type on the same document, with the purpose of preventing false phrase matching across fields. For more info on customizing your analyzer
			chain, please see http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters -->

		<!-- One can also specify an existing Analyzer class that has a default constructor via the class attribute on the analyzer element. Example: <fieldType name="text_greek" class="solr.TextField"> <analyzer
			class="org.apache.lucene.analysis.el.GreekAnalyzer"/> </fieldType> -->

		<!-- A text field that only splits on whitespace for exact matching of words -->
		<fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
			</analyzer>
		</fieldType>


		<!-- text_spell champ pour spellcheck -->

		<fieldType name="text_spell" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<charFilter class="solr.HTMLStripCharFilterFactory"/>
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="'" replacement="" replace="all"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" stemEnglishPossessive="0"/>
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>


		<!-- A general text field that has reasonable, generic cross-language defaults: it tokenizes with StandardTokenizer, removes stop words from case-insensitive "stopwords.txt" (empty by default), and down
			cases. At query time only, it also applies synonyms. -->
		<fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">

				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" /> -->

				<charFilter class="solr.HTMLStripCharFilterFactory"/>
				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
				<tokenizer class="solr.StandardTokenizerFactory"/>

				<!-- in this example, we will only use synonyms at query time <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/> -->
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>

				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" /> <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true"
					expand="true" /> -->
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>

		<!-- A text field with defaults appropriate for English: it tokenizes with StandardTokenizer, removes English stop words (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and finally
			applies Porter's stemming. The query time analyzer also applies synonyms from synonyms.txt. -->
		<fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<!-- in this example, we will only use synonyms at query time <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/> -->
				<!-- Case insensitive stop word removal. add enablePositionIncrements=true in both the index and query analyzers to leave a 'gap' for more accurate phrase queries. -->
				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true" /> -->
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.EnglishPossessiveFilterFactory"/>
				<!-- <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" /> -->
				<!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory: <filter class="solr.EnglishMinimalStemFilterFactory"/> -->
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<!-- <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" /> -->
				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true" /> -->
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.EnglishPossessiveFilterFactory"/>
				<!-- <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" /> -->
				<!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory: <filter class="solr.EnglishMinimalStemFilterFactory"/> -->
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
		</fieldType>

		<!-- A text field with defaults appropriate for English, plus aggressive word-splitting and autophrase features enabled. This field is just like text_en, except it adds WordDelimiterFilter to enable
			splitting and matching of words on case-change, alpha numeric boundaries, and non-alphanumeric chars. This means certain compound word cases will work, for example query "wi fi" will match document "WiFi"
			or "wi-fi". -->
		<fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<!-- in this example, we will only use synonyms at query time <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/> -->
				<!-- Case insensitive stop word removal. add enablePositionIncrements=true in both the index and query analyzers to leave a 'gap' for more accurate phrase queries. -->
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
		</fieldType>


		<!-- Just like text_general except it reverses the characters of each token, to enable more efficient leading wildcard queries. -->
		<fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.ReversedWildcardFilterFactory" withOriginal="true" maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>

		<!-- charFilter + WhitespaceTokenizer -->
		<!-- <fieldType name="text_char_norm" class="solr.TextField" positionIncrementGap="100" > <analyzer> <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/> <tokenizer
			class="solr.WhitespaceTokenizerFactory"/> </analyzer> </fieldType> -->

		<!-- This is an example of using the KeywordTokenizer along With various TokenFilterFactories to produce a sortable field that does not include some properties of the source text -->
		<fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
			<analyzer>
				<!-- KeywordTokenizer does no actual tokenizing, so the entire input string is preserved as a single token -->
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<!-- The LowerCase TokenFilter does what you expect, which can be when you want your sorting to be case insensitive -->
				<filter class="solr.LowerCaseFilterFactory"/>
				<!-- The TrimFilter removes any leading or trailing whitespace -->

				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>

				<filter class="solr.TrimFilterFactory"/>
				<!-- The PatternReplaceFilter gives you the flexibility to use Java Regular expression to replace any sequence of characters matching a pattern with an arbitrary replacement string, which may include
					back references to portions of the original string matched by the pattern. See the Java Regular Expression documentation for more information on pattern and replacement string syntax. http://java.sun.com/j2se/1.6.0/docs/api/java/util/regex/package-summary.html -->
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement="" replace="all"/>
			</analyzer>
		</fieldType>

		<fieldtype name="phonetic" stored="false" indexed="true" class="solr.TextField">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
			</analyzer>
		</fieldtype>

		<fieldtype name="payloads" stored="false" indexed="true" class="solr.TextField">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<!-- The DelimitedPayloadTokenFilter can put payloads on tokens... for example, a token of "foo|1.4" would be indexed as "foo" with a payload of 1.4f Attributes of the DelimitedPayloadTokenFilterFactory
					: "delimiter" - a one character delimiter. Default is | (pipe) "encoder" - how to encode the following value into a playload float -> org.apache.lucene.analysis.payloads.FloatEncoder, integer -> o.a.l.a.p.IntegerEncoder
					identity -> o.a.l.a.p.IdentityEncoder Fully Qualified class name implementing PayloadEncoder, Encoder must have a no arg constructor. -->
				<filter class="solr.DelimitedPayloadTokenFilterFactory" encoder="float"/>
			</analyzer>
		</fieldtype>

		<!-- lowercases the entire field value, keeping it as a single token. -->
		<fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>

		<!-- Example of using PathHierarchyTokenizerFactory at index time, so queries for paths match documents at that path, or in descendent paths -->
		<fieldType name="descendent_path" class="solr.TextField">
			<analyzer type="index">
				<tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.KeywordTokenizerFactory"/>
			</analyzer>
		</fieldType>
		<!-- Example of using PathHierarchyTokenizerFactory at query time, so queries for paths match documents at that path, or in ancestor paths -->
		<fieldType name="ancestor_path" class="solr.TextField">
			<analyzer type="index">
				<tokenizer class="solr.KeywordTokenizerFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
			</analyzer>
		</fieldType>

		<!-- since fields of this type are by default not stored or indexed, any data added to them will be ignored outright. -->

		<!-- <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" /> -->

		<!-- This point type indexes the coordinates as separate fields (subFields) If subFieldType is defined, it references a type, and a dynamic field definition is created matching *___<typename>. Alternately,
			if subFieldSuffix is defined, that is used to create the subFields. Example: if subFieldType="double", then the coordinates would be indexed in fields myloc_0___double,myloc_1___double. Example: if subFieldSuffix="_d"
			then the coordinates would be indexed in fields myloc_0_d,myloc_1_d The subFields are an implementation detail of the fieldType, and end users normally should not need to know about them. -->

		<!-- <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d" /> -->
		<!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
		<!-- <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate" /> -->

		<!-- An alternative geospatial field type new to Solr 4. It supports multiValued and polygon shapes. For more information about this and other Spatial fields new to Solr 4, see: http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4 -->

		<!--
                <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType" spatialContextFactory="com.spatial4j.core.context.jts.JtsSpatialContextFactory" distErrPct="0.025" maxDistErr="0.000009" units="degrees" geo="true"/>
        -->

		<!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType Parameters: defaultCurrency: Specifies the default currency if none specified. Defaults to "USD" precisionStep: Specifies
			the precisionStep for the TrieLong field used for the amount providerClass: Lets you plug in other exchange provider backend: solr.FileExchangeRateProvider is the default and takes one parameter: currencyConfig:
			name of an xml file holding exchange rates solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org: ratesFileLocation: URL or path to rates JSON file (default latest.json on the web) refreshInterval:
			Number of minutes between each rates fetch (default: 1440, min: 60) -->
		<!-- <fieldType name="currency" class="solr.CurrencyField" precisionStep="8" defaultCurrency="USD" currencyConfig="currency.xml" /> -->

		<!-- A text field that uses WordDelimiterFilter to enable splitting and matching of words on case-change, alpha numeric boundaries, and non-alphanumeric chars, so that a query of "wifi" or "wi fi" could
			match a document containing "Wi-Fi". Synonyms and stopwords are customized by external files, and stemming is enabled. Duplicate tokens at the same position (which may result from Stemmed Synonyms or WordDelim
			parts) are removed. -->
		<fieldType name="text" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<!-- in this example, we will only use synonyms at query time <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/> -->
				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" /> -->
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>

				<filter class="solr.LowerCaseFilterFactory"/>
				<!-- <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" /> -->
				<filter class="solr.PorterStemFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
				<charFilter class="solr.HTMLStripCharFilterFactory"/>
				<!-- <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt" /> -->

			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<!-- <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" /> <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" /> -->
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<!-- <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" /> -->
				<filter class="solr.PorterStemFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
		</fieldType>

		<fieldType name="text_autocomplete" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.ShingleFilterFactory" maxShingleSize="4" outputUnigrams="true"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.TrimFilterFactory"/>
			</analyzer>

			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.ShingleFilterFactory" maxShingleSize="4" outputUnigrams="true"/>
			</analyzer>

		</fieldType>

	</types>



	<fields>

		<!-- champ_suffixeType ================= -->
		<!-- _s string -->
		<!-- _i integer -->
		<!-- _t text -->
		<!-- _phonetic phonetique -->
		<!-- _bool booleen -->
		<!-- _tdate champ de type date, recherche d'intervalle possible -->
		<!-- _fs string mais pour facette avec un séparateur entre le code et son libellé -->
		<!-- _sort uniquement pour le tri cf "alphaSortOnly" -->
		<!-- _autocomplete traitement particulier pour les autocompletions via ajax -->



		<!-- Identifiant unique de chaque document ======================================================= -->
		<field name="docid" type="int" indexed="true" stored="true" multiValued="false" required="true"/>
		<!-- Identifiant unique de chaque document ======================================================= -->

		<!-- Permanent id across all document versions ; links to multiple docids -->
		<field name="paperid" type="int" indexed="true" stored="true" multiValued="false" />

		<!-- Identifiant du document au sein de l'archive dont il est issu ======================================================= -->
		<field name="identifier_s" type="string" indexed="true" stored="true" multiValued="false" required="true"/>
		<!-- Identifiant du document au sein de l'archive dont il est issu ======================================================= -->

		<!-- Langue du document ======================================================= -->
		<field name="language_s" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Langue du document ======================================================= -->

		<!-- Versioning auto de chaque document ======================================================= -->
		<field name="_version_" type="long" indexed="true" stored="true"/>
		<!-- Versioning auto de chaque document ======================================================= -->


		<!-- Statut du doc (accepté, refusé..) =================================================================================================== -->
		<field name="status_s" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Statut du doc (accepté, refusé..) =================================================================================================== -->


		<!-- Version du document ======================================================= -->
		<field name="version_td" type="tdouble" indexed="false" stored="true" multiValued="false" required="false"/>
		<!-- Version du document ======================================================= -->


		<!-- Date de publication ======================================================= -->
		<field name="publication_date_tdate" type="tdate" indexed="true" stored="true" multiValued="false"/>
		<field name="publication_date_year_fs" type="tint" indexed="true" stored="true" multiValued="false"/>
		<field name="publication_date_month_fs" type="tint" indexed="true" stored="true" multiValued="false"/>
		<field name="publication_date_day_fs" type="tint" indexed="true" stored="true" multiValued="false"/>
		<!-- Date de publication ======================================================= -->

		<!-- URL de la page du document [sur Episciences] =================================================================================================== -->
		<field name="es_doc_url_s" type="string" indexed="false" stored="true" multiValued="false" required="false"/>
		<!-- URL de la page du document [sur Episciences] =================================================================================================== -->

		<!-- URL du document (fichier PDF) [sur Episciences] =================================================================================================== -->
		<field name="es_pdf_url_s" type="string" indexed="false" stored="true" multiValued="false" required="false"/>
		<!-- URL de la page du document [sur Episciences] =================================================================================================== -->


		<!-- URL de la page du document [dans l'archive] =================================================================================================== -->
		<field name="doc_url_s" type="string" indexed="false" stored="true" multiValued="false" required="false"/>
		<!-- URL de la page du document =================================================================================================== -->

		<!-- URL du document (fichier PDF) [dans l'archive] ================================================================================================= -->
		<field name="paper_url_s" type="string" indexed="false" stored="true" multiValued="false" required="false"/>
		<!-- URL du document (fichier PDF) ================================================================================================= -->


		<!-- Titre ================================================================================================= -->
		<dynamicField name="*_paper_title_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- tous les titres, dans toutes les langues, juste pour la recherche -->
		<field name="paper_title_t" type="text" indexed="true" stored="true" multiValued="true" required="false"/>
		<copyField source="*_paper_title_t" dest="paper_title_t"/>

		<field name="title_autocomplete" type="text_autocomplete" indexed="true" stored="true" multiValued="true" required="false"/>
		<field name="title_sort" type="alphaOnlySort" indexed="true" stored="false" omitNorms="true" multiValued="false"/>
		<field name="title_abbreviation_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Titre ================================================================================================= -->


		<!-- Abstract =================================================================================================== -->
		<dynamicField name="*_abstract_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- tous les titres, dans toutes les langues, juste pour la recherche -->
		<field name="abstract_t" type="text" indexed="true" stored="true" multiValued="true" required="false"/>
		<copyField source="*_abstract_t" dest="abstract_t"/>
		<!-- Abstract =================================================================================================== -->

		<!-- Keywords =================================================================================================== -->
		<field name="keyword_t" type="text" indexed="true" stored="true" multiValued="true" required="false"/>
		<!-- Keywords =================================================================================================== -->

		<!-- Revue =================================================================================================== -->
		<field name="revue_id_i" type="int" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="revue_status_i" type="int" indexed="false" stored="true" multiValued="false" required="false"/>
		<field name="revue_code_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="revue_creation_date_tdate" type="tdate" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="revue_title_s" type="string" indexed="false" stored="true" multiValued="false" required="false"/>
		<field name="revue_title_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<copyField source="revue_title_s" dest="revue_title_t"/>
		<field name="revue_issn_s" type="string" indexed="true" stored="true" multiValued="false" required="false"/>

		<field name="revue_title_fs" type="string" indexed="true" stored="true" multiValued="false" required="false"/>

		<!-- Revue =================================================================================================== -->


		<!-- Volume principal ======================================================================================== -->
		<field name="volume_id_i" type="int" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="volume_status_i" type="int" indexed="false" stored="true" multiValued="false" required="false"/>

		<dynamicField name="*_volume_title_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- tous les titres, dans toutes les langues, juste pour la recherche -->
		<field name="volume_title_t" type="text" indexed="true" stored="true" multiValued="true" required="false"/>
		<copyField source="*_volume_title_t" dest="volume_title_t"/>

		<field name="volume_fs" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Volume =================================================================================================== -->

		<!-- Volumes secondaires ====================================================================================== -->
		<field name="secondary_volume_id_i" type="int" indexed="true" stored="true" multiValued="true" required="false"/>

		<dynamicField name="*_secondary_volume_title_t" type="text" indexed="true" stored="true" multiValued="true" required="false"/>
		<!-- tous les titres, dans toutes les langues, juste pour la recherche -->
		<field name="secondary_volume_title_t" type="text" indexed="true" stored="true" multiValued="true" required="false"/>
		<copyField source="*_secondary_volume_title_t" dest="secondary_volume_title_t"/>

		<field name="secondary_volume_fs" type="string" indexed="true" stored="true" multiValued="true" required="false"/>
		<!-- Volume =================================================================================================== -->


		<!-- Rubrique =================================================================================================== -->
		<field name="section_id_i" type="int" indexed="true" stored="true" multiValued="false" required="false"/>

		<dynamicField name="*_section_title_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- tous les titres, dans toutes les langues, juste pour la recherche -->
		<field name="section_title_t" type="text" indexed="true" stored="true" multiValued="true" required="false"/>
		<copyField source="*_section_title_t" dest="section_title_t"/>

		<field name="section_fs" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Rubrique =================================================================================================== -->



		<!-- Repository =================================================================================================== -->
		<field name="repo_id_i" type="int" indexed="false" stored="true" multiValued="false" required="false"/>
		<field name="repo_title_s" type="text" indexed="false" stored="true" multiValued="false" required="false"/>
		<field name="repo_title_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<copyField source="repo_title_s" dest="repo_title_t"/>
		<!-- Repository =================================================================================================== -->


		<!-- Déposant =================================================================================================== -->
		<field name="submitter_id_i" type="int" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="submitter_email_s" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="submitter_firstname_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="submitter_lastname_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>

		<!-- Submitter fullname pour affichage -->
		<field name="submitter_fullname_s" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Submitter fullname pour facette -->
		<field name="submitter_fullname_fs" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Submitter fullname pour recherche -->
		<field name="submitter_fullname_t" type="text" indexed="true" stored="false" multiValued="false" required="false"/>
		<field name="submitter_fullname_autocomplete" type="text_autocomplete" indexed="true" stored="true" multiValued="false" required="false"/>

		<copyField source="submitter_fullname_s" dest="submitter_fullname_t"/>
		<!-- Déposant =================================================================================================== -->

		<!-- Auteurs =================================================================================================== -->
		<!-- Author fullname pour affichage -->
		<field name="author_fullname_s" type="string" indexed="true" stored="true" multiValued="true" required="false"/>
		<!-- Author fullname pour facette -->
		<field name="author_fullname_fs" type="string" indexed="true" stored="true" multiValued="true" required="false"/>
		<!-- Author fullname pour recherche -->
		<field name="author_fullname_t" type="text" indexed="true" stored="false" multiValued="true" required="false"/>
		<field name="author_fullname_autocomplete" type="text_autocomplete" indexed="true" stored="true" multiValued="true" required="false"/>
		<copyField source="author_fullname_s" dest="author_fullname_t"/>

		<!-- Liste des auteurs par ordre d'apparition, en une seule chaine pour le tri par auteur -->
		<field name="author_fullname_sort" type="alphaOnlySort" indexed="true" stored="true" omitNorms="true" multiValued="false"/>
		<!-- Auteurs =================================================================================================== -->


		<!-- Dates =================================================================================================== -->
		<!-- dates au format 1995-12-31T23:59:59Z -->
		<field name="submission_date_tdate" type="tdate" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="es_submission_date_tdate" type="tdate" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="es_publication_date_tdate" type="tdate" indexed="true" stored="true" multiValued="false" required="false"/>

		<!-- Date d'indexation du document -->
		<field name="indexing_date_tdate" type="tdate" indexed="true" stored="true" multiValued="false" required="true"/>

		<!-- Découpage pour pivot facet ou field collapsing -->
		<field name="es_publication_date_year_fs" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="es_publication_date_month_fs" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<field name="es_publication_date_day_fs" type="string" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Dates =================================================================================================== -->


		<!-- Texte intégral =================================================================================================== -->
		<!-- le TI de tous les PDF concaténés pour indexation, on stocke uniquement pour le highlighting -->
		<field name="fulltext_t" type="text" indexed="true" stored="true" multiValued="false" required="false"/>
		<!-- Texte intégral =================================================================================================== -->


		<!-- catchall fields, containing all other searchable text fields (cf copyField à la fin de ce schema) -->
		<field name="text" type="text" indexed="true" stored="false" multiValued="true"/>
		<field name="text_spell" type="text_spell" indexed="true" stored="true" multiValued="true"/>
		<field name="text_autocomplete" type="text_autocomplete" indexed="true" stored="true" multiValued="true"/>
		<field name="text_phonetic" type="phonetic" indexed="true" stored="false" multiValued="true"/>
		<!-- catchall fields, containing all other searchable text fields (cf copyField à la fin de ce schema) -->


	</fields>


	<!-- field to use to determine and enforce document uniqueness. -->
	<uniqueKey>docid</uniqueKey>


	<!-- NB : la copie en cascade ne fonctionne pas, le champ source est celui dans lequel on met les données pas un champ ou on a déjà recopié des données -->

	<copyField source="paper_title_t" dest="text"/>
	<copyField source="*_paper_title_t" dest="text"/>
	<copyField source="*_abstract_t" dest="text"/>
	<copyField source="*_volume_title_t" dest="text"/>
	<copyField source="*_secondary_volume_title_t" dest="text"/>
	<copyField source="*_section_title_t" dest="text"/>
	<copyField source="author_fullname_s" dest="text"/>

	<copyField source="paper_title_t" dest="text_autocomplete"/>
	<copyField source="*_paper_title_t" dest="text_autocomplete"/>
	<copyField source="*_abstract_t" dest="text_autocomplete"/>
	<copyField source="*_volume_title_t" dest="text_autocomplete"/>
	<copyField source="*_secondary_volume_title_t" dest="text_autocomplete"/>
	<copyField source="*_section_title_t" dest="text_autocomplete"/>
	<copyField source="author_fullname_s" dest="text_autocomplete"/>

	<copyField source="paper_title_t" dest="text_phonetic"/>
	<copyField source="*_paper_title_t" dest="text_phonetic"/>
	<copyField source="*_abstract_t" dest="text_phonetic"/>
	<copyField source="*_volume_title_t" dest="text_phonetic"/>
	<copyField source="*_secondary_volume_title_t" dest="text_phonetic"/>
	<copyField source="*_section_title_t" dest="text_phonetic"/>
	<copyField source="author_fullname_s" dest="text_phonetic"/>

	<copyField source="paper_title_t" dest="text_spell"/>
	<copyField source="*_paper_title_t" dest="text_spell"/>
	<copyField source="*_abstract_t" dest="text_spell"/>
	<copyField source="*_volume_title_t" dest="text_spell"/>
	<copyField source="*_secondary_volume_title_t" dest="text_spell"/>
	<copyField source="*_section_title_t" dest="text_spell"/>
	<copyField source="author_fullname_s" dest="text_spell"/>

</schema>
